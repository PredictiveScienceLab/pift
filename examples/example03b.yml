# Unittest - Configuration file
# Some parameters the control the output
output:
  # The output files will have the following prefix
  prefix: example03
# The physical domain
domain: 
  bounds:
    - [0.0, 1.0]
source:
  # Number of terms in Karhunen-Loeve expansion
  num_terms: 10
  # Lengthscale of squared exponential kernel
  ell: 0.3
  # Signal strength of squared exponential kernel
  s: 1.0
  # The number of collocation points used in the Nystrom approximation
  nq: 100
# Parameterization details
field:
  # The number of Fourier terms to use
  num_terms: 20
  # The values at the boundary
  boundary_values: [0.0, 0.0]
# Sampling details for the parameters
parameters:
    # How to initialize the parameters
    # The parameters that are not specified start from zero
    init_mean: [0.0, 0.0]
    init_std: [0.1, 0.1]
    # The number of collocation points for integrating over the spatial
    # dimension when taking gradients with respect to theta
    num_collocation: 1
    # The SGLD options for parameter sampling
    sgld:
      alpha: 0.1
      beta: 0.0
      gamma: 0.51
      # sigma_w is irrelevant
      save_to_file: true
      save_freq: 10000
      disp: true 
      disp_freq: 10000
      num_warmup: 10000000
      num_samples: 0
    # To sample the parameters we need to construct unbiased estimators prior
    # and posterior expectations over w of the gradient of the Hamiltonian
    # with respect to the parameters.
    # Unbiased estimator of the prior expectation over w
    prior:
      # Number of different w chains to sample
      num_chains: 1
      # The warmup to do at the beginning
      num_init_warmup: 1000000
      # The number of distinct w samples you wish to obtain
      num_bursts: 1
      # Whether or not to reinitialize the ws at each iteration of theta
      # sampling. If false, then each chain is continued from the last w
      # sample.
      reinitialize_ws: false
      # How many collocation points to use to take spatial integrals
      num_collocation: 1
      # The standard deviation for initializing the ws
      sigma_w: 0.1
      # If adjust_alpha is true, then SGLD alpha is divided by the inverse
      # temperature beta
      adjust_alpha: true
      sgld:
        # The learning rate parameters
        alpha: 1e-1
        beta: 0.0
        gamma: 0.51
        save_to_file: true 
        save_freq: 100000
        disp: false
        disp_freq: 1
        # The warmup to do on w at each iteration of theta sampling
        num_warmup: 0
        # The number of production samples to take after completing the 
        # warmup period. Only the last of these is used for the unbiased
        # estimator of the gradient of the Hamiltonian with respect to theta. 
        num_samples: 10
    # Unbiased estimator of the posterior expectation over w
    post:
      # Number of different w chains to sample
      num_chains: 1
      # The warmup to do at the beginning
      num_init_warmup: 1000000
      # The number of distinct w samples you wish to obtain
      num_bursts: 1
      # Whether or not to reinitialize the ws at each iteration of theta
      # sampling. If false, then each chain is continued from the last w
      # sample.
      reinitialize_ws: false
      # How many collocation points to use to take spatial integrals
      num_collocation: 1
      # The standard deviation for initializing the ws
      sigma_w: 0.1
      adjust_alpha: true
      # The batch size used in the unbiased estimator for the likelihood
      batch_size: 1
      sgld:
        # The learning rate parameters
        alpha: 10.0
        beta: 0.0
        gamma: 0.51
        save_to_file: true
        save_freq: 10000
        disp: false
        disp_freq: 1000000
        # The warmup to do on w at each iteration of theta sampling
        num_warmup: 0
        # The number of production samples to take after completing the 
        # warmup period. Only the last of these is used for the unbiased
        # estimator of the gradient of the Hamiltonian with respect to theta. 
        num_samples: 1
postprocess:
  # We will write to a file <PREFIX>_<BETA>_field.csv the v
  num_points_per_dim:
    - 100
